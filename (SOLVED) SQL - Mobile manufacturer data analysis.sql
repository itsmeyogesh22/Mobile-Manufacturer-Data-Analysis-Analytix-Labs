use case_study1;
select TABLE_NAME from INFORMATION_SCHEMA.TABLES;
select * from INFORMATION_SCHEMA.VIEWS;

--1. List all the states in which we have customers who have bought cellphones from 2005 till today. 

select distinct State from
(select  A.STATE, Date
from DIM_LOCATION A
INNER JOIN FACT_TRANSACTIONS B ON A.IDLocation = B.IDLocation
where datepart(YEAR, Date) BETWEEN 2005 AND datepart(YEAR, SYSDATETIME()))D;


--2. What state in the US is buying the most 'Samsung' cell phones? select TOP 1 A.IDManufacturer, D.State, count(Manufacturer_Name)SALES_CNTfrom DIM_MANUFACTURER AINNER JOIN DIM_MODEL B ON A.IDManufacturer = B.IDManufacturer AND Manufacturer_Name = 'Samsung'INNER JOIN FACT_TRANSACTIONS C ON B.IDModel = C.IDModelINNER JOIN DIM_LOCATION D ON C.IDLocation = D.IDLocation AND D.Country = 'US'group by D.State, A.IDManufacturer, Manufacturer_Name;--3. Show the number of transactions for each model per zip code per state. select distinct C.Model_Name, A.ZipCode, A.State, count(State)TTL_SALESfrom DIM_LOCATION AINNER JOIN FACT_TRANSACTIONS B ON A.IDLocation = B.IDLocationINNER JOIN DIM_MODEL C ON B.IDModel = C.IDModelgroup by C.Model_Name, A.ZipCode, A.Stateorder by ZipCode, STATE;--4. Show the cheapest cellphone (Output should contain the price also)select B.Manufacturer_Name, A.Model_Name, A.Unit_pricefrom DIM_MODEL AJOIN DIM_MANUFACTURER B ON A.IDManufacturer = B.IDManufacturerwhere UNIT_PRICE =(select min(Unit_price) from DIM_MODEL);select top 1 B.Manufacturer_Name, A.Model_Name, min(Unit_price)from DIM_MODEL AJOIN DIM_MANUFACTURER B ON A.IDManufacturer = B.IDManufacturergroup by Manufacturer_Name, Model_Name;--5. Find out the average price for each model in the top5 manufacturers in terms of sales quantity and order by average price.select  Manufacturer_Name, IDManufacturer, IDModel, Model_Name, AVG(TotalPrice)AVG_PRICE from(select A.Manufacturer_Name, A.IDManufacturer, B.IDModel, B.Model_Name, C.TotalPrice, count(C.IDModel) as TTL_SALESfrom DIM_MANUFACTURER ALEFT JOIN DIM_MODEL B ON A.IDManufacturer = B.IDManufacturerLEFT JOIN FACT_TRANSACTIONS C ON B.IDModel = C.IDModelgroup by A.Manufacturer_Name, A.IDManufacturer, B.IDModel, B.Model_Name, C.TotalPrice)Awhere A.IDManufacturer in (							select top 5 A.IDManufacturer							from DIM_MANUFACTURER A							LEFT JOIN DIM_MODEL B ON A.IDManufacturer = B.IDManufacturer							LEFT JOIN FACT_TRANSACTIONS C ON B.IDModel = C.IDModel							group by A.IDManufacturer							order by SUM(Quantity) DESC)group by Manufacturer_Name, A.IDManufacturer, IDModel, Model_Nameorder by AVG_PRICE;--6. List the names of the customers and the average amount spent in 2009, where the average is higher than 500 select A.IDCustomer, A.Customer_Name, AVG(B.TotalPrice) AS [avg_amt]from DIM_CUSTOMER AINNER JOIN FACT_TRANSACTIONS B ON A.IDCustomer = B.IDCustomer and datepart(YEAR, Date) = 2009group by A.Customer_Name, A.IDCustomerhaving AVG(B.TotalPrice) >= 500order by AVG(B.TotalPrice) DESC;--7. List if there is any model that was in the top 5 in terms of quantity, simultaneously in 2008, 2009 and 2010 select * from(select top 5 B.Model_Namefrom FACT_TRANSACTIONS AINNER JOIN DIM_MODEL B ON A.IDModel = B.IDModel where YEAR(Date) = '2008'group by  B.Model_Nameorder by SUM(Quantity) descintersectselect top 5 B.Model_Namefrom FACT_TRANSACTIONS AINNER JOIN DIM_MODEL B ON A.IDModel = B.IDModel where YEAR(Date) = '2009'group by  B.Model_Nameorder by SUM(Quantity) descintersectselect top 5 B.Model_Namefrom FACT_TRANSACTIONS AINNER JOIN DIM_MODEL B ON A.IDModel = B.IDModel where YEAR(Date) = '2010'group by  B.Model_Nameorder by SUM(Quantity) desc)A;--8. Show the manufacturer with the 2nd top sales in the year of 2009 and the manufacturer with the 2nd top sales in the year of 2010. select top 2 C.Manufacturer_Name as [Name], C.IDManufacturer, DATEPART(YEAR, A.Date), sum(TotalPrice) as [SUM], DENSE_RANK() over (partition by A.Date  order by sum(TotalPrice))from FACT_TRANSACTIONS AINNER JOIN DIM_MODEL B ON A.IDModel = B.IDModelINNER JOIN DIM_MANUFACTURER C ON B.IDManufacturer = C.IDManufacturer where DATEPART(YEAR, date) in ('2009', '2010')group by  C.Manufacturer_Name, c.IDManufacturer, TotalPrice, A.Dateorder by SUM(TotalPrice) desc--please ignore thisselect top 1 last_value(D.Name) over (order by D.SUM) from(select top 2 C.Manufacturer_Name as [Name], C.IDManufacturer, sum(Quantity) as [SUM]from FACT_TRANSACTIONS AINNER JOIN DIM_MODEL B ON A.IDModel = B.IDModelINNER JOIN DIM_MANUFACTURER C ON B.IDManufacturer = C.IDManufacturer where DATEPART(YEAR, date) = 2009group by  C.Manufacturer_Name, c.IDManufacturerorder by SUM(Quantity) desc) as D;--please ignore thisselect top 1 last_value(E.Name) over (order by E.SUM) from(select top 2 C.Manufacturer_Name as [Name], C.IDManufacturer, sum(Quantity) as [SUM]from FACT_TRANSACTIONS AINNER JOIN DIM_MODEL B ON A.IDModel = B.IDModelINNER JOIN DIM_MANUFACTURER C ON B.IDManufacturer = C.IDManufacturer where DATEPART(YEAR, date) = 2010group by  C.Manufacturer_Name, C.IDManufacturerorder by SUM(Quantity) desc) as E;--9. Show the manufacturers that sold cellphones in 2010 but did not in 2009. select distinct C.Manufacturer_Name as [Name], C.IDManufacturer, DATEPART(YEAR, A.Date) AS [YR]from FACT_TRANSACTIONS AINNER JOIN DIM_MODEL B ON A.IDModel = B.IDModelINNER JOIN DIM_MANUFACTURER C ON B.IDManufacturer = C.IDManufacturer where C.Manufacturer_Name NOT IN 						  (select distinct A.Manufacturer_Name						  from DIM_MANUFACTURER A						  INNER JOIN DIM_MODEL B ON A.IDManufacturer = B.IDManufacturer						  INNER JOIN FACT_TRANSACTIONS C ON B.IDModel = C.IDModel where DATEPART(YEAR, C.Date) = 2009)AND DATEPART(YEAR, A.Date) = 2010;--10. Find top 100 customers and their average spend, average quantity by each year. Also find the percentage of change in their spend. select top 100 A.IDCustomer, A.Customer_Name, YEAR(B.Date) as [YR], AVG(B.Quantity) as [AVG_Quantity], AVG(B.TotalPrice) as [AVG_Amt]from DIM_CUSTOMER AINNER JOIN FACT_TRANSACTIONS B ON A.IDCustomer = B.IDCustomergroup by A.IDCustomer, A.Customer_Name, YEAR(B.Date);select top 100 A.IDCustomer, A.Customer_Name, YEAR(B.Date) as [YR], AVG(B.Quantity) as [AVG_Quantity], AVG(B.TotalPrice) as [AVG_Amt],format((AVG(B.TotalPrice) - lag(AVG(B.TotalPrice)) over (partition by A.IDCustomer order by YEAR(B.Date)))/((AVG(B.TotalPrice) + lag(AVG(B.TotalPrice)) over (partition by A.IDCustomer order by YEAR(B.Date)))/2)*100, '######.#####') + ' %'from DIM_CUSTOMER AINNER JOIN FACT_TRANSACTIONS B ON A.IDCustomer = B.IDCustomergroup by A.IDCustomer, A.Customer_Name, YEAR(B.Date);select top 100 A.IDCustomer, A.Customer_Name, YEAR(B.Date) as [YR], AVG(B.Quantity) as [AVG_Quantity], AVG(B.TotalPrice) as [AVG_Amt],((AVG(B.TotalPrice) - lag(AVG(B.TotalPrice)) over (partition by A.IDCustomer order by YEAR(B.Date)))/((AVG(B.TotalPrice) + lag(AVG(B.TotalPrice)) over (partition by A.IDCustomer order by YEAR(B.Date)))/2)*100)from DIM_CUSTOMER AINNER JOIN FACT_TRANSACTIONS B ON A.IDCustomer = B.IDCustomergroup by A.IDCustomer, A.Customer_Name, YEAR(B.Date);select * from DIM_MANUFACTURERselect * from DIM_MODELselect * from DIM_LOCATIONselect * from FACT_TRANSACTIONSselect * from DIM_CUSTOMER